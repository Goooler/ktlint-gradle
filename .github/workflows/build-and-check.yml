name: Build and check

on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master

jobs:
  validation:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: gradle/wrapper-validation-action@v1
        with:
          min-wrapper-count: 2

  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          java-version: 8
          distribution: 'zulu'
      - uses: gradle/gradle-build-action@v2
      - name: Build plugin
        run: ./plugin/gradlew -p ./plugin assemble ensureDependenciesAreInlined test --no-daemon
      - name: Save test results
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: test-results
          path: plugin/build/reports/tests/test/
      - name: Check plugin codestyle
        run: ./plugin/gradlew -p ./plugin ktlintCheck --no-daemon

  check_bashisms:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          java-version: 8
          distribution: 'zulu'
      - uses: gradle/gradle-build-action@v2
      - name: Install checkbashisms
        run: sudo apt-get install -qq devscripts
      - name: Check git bashisms
        run: ./gradlew addKtlintCheckGitPreCommitHook --no-daemon && checkbashisms .git/hooks/pre-commit

  check_samples:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    needs: build
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          java-version: 8
          distribution: 'zulu'
      - uses: gradle/gradle-build-action@v2
      - name: Check ktlint-plugin on samples
        run: ./gradlew ktlintCheck --no-daemon
